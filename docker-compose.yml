version: '3.8'

# Environment-specific configurations
x-base-config: &base-config
  build:
    context: .
    args:
      - ENVIRONMENT=${ENVIRONMENT:-production}
  env_file:
    - .env
  volumes:
    - ./logs:/app/logs
    - ./:/app
  depends_on:
    db:
      condition: service_healthy

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-telemetrysleuth}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  tcp-listener:
    <<: *base-config
    environment:
      - SERVICE_TYPE=tcp-listener
      - TCP_HOST=0.0.0.0
      - TCP_PORT=${TCP_PORT:-9000}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT:-8765}
    ports:
      - "${TCP_PORT:-9000}:9000"
      - "${WEBSOCKET_PORT:-8765}:8765"
    command: tcp-listener

  web:
    <<: *base-config
    environment:
      - SERVICE_TYPE=web
      - FLASK_ENV=${FLASK_ENV:-production}
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
    ports:
      - "${WEB_PORT:-5000}:5000"
    command: web

  # Optional development tools
  adminer:
    image: adminer
    restart: always
    ports:
      - 8090:8080
    depends_on:
      - db

volumes:
  postgres_data:
  logs:

networks:
  telemetrysleuth:
    driver: bridge
