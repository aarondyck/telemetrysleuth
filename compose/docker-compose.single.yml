services:
  telemetrysleuth:
    image: telemetrysleuth:latest
    env_file:
      - ../.env.example
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - FLASK_ENV=${FLASK_ENV}
      - TCP_HOST=${TCP_HOST}
      - TCP_PORT=${TCP_PORT}
      - WEBSOCKET_PORT=${WEBSOCKET_PORT}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_DIR=${LOG_DIR}
      - ENVIRONMENT=${ENVIRONMENT}
      - WEB_PORT=${WEB_PORT}
      - MAX_RECORDS_PER_PAGE=${MAX_RECORDS_PER_PAGE}
      - SQLALCHEMY_TRACK_MODIFICATIONS=${SQLALCHEMY_TRACK_MODIFICATIONS}
      - SQLALCHEMY_ECHO=${SQLALCHEMY_ECHO}
      - GUNICORN_WORKERS=${GUNICORN_WORKERS}
      - GUNICORN_THREADS=${GUNICORN_THREADS}
    ports:
      - "${WEB_PORT}:5000"
      - "${TCP_PORT}:9000"
      - "${WEBSOCKET_PORT}:8765"
    volumes:
      - ../logs:/app/logs
      - ../:/app
    command: ["web-and-tcp"]
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  logs:

networks:
  default:
    driver: bridge
